/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { WalletTestHelper } from "./WalletTestHelper";

export class WalletTestHelperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_celerWallet: string): Promise<WalletTestHelper> {
    return super.deploy(_celerWallet) as Promise<WalletTestHelper>;
  }
  getDeployTransaction(_celerWallet: string): UnsignedTransaction {
    return super.getDeployTransaction(_celerWallet);
  }
  attach(address: string): WalletTestHelper {
    return super.attach(address) as WalletTestHelper;
  }
  connect(signer: Signer): WalletTestHelperFactory {
    return super.connect(signer) as WalletTestHelperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletTestHelper {
    return new Contract(address, _abi, signerOrProvider) as WalletTestHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_celerWallet",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "walletId",
        type: "bytes32"
      }
    ],
    name: "NewWallet",
    type: "event"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]"
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256"
      }
    ],
    name: "create",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102a93803806102a98339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610244806100656000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806348e7c62714610030575b600080fd5b6100e16004803603606081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184602083028401116401000000008311171561009557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602001356100e3565b005b6040805160208082018490528251808303820181528284019384905280519082012060008054630d63a1fd60e01b9095526001600160a01b03878116606486015260848501839052606060448601908152895160a48701528951939692959190921693630d63a1fd938a938a9389939192839260c49092019187810191028083838d5b8381101561017e578181015183820152602001610166565b50505050905001945050505050602060405180830381600087803b1580156101a557600080fd5b505af11580156101b9573d6000803e3d6000fd5b505050506040513d60208110156101cf57600080fd5b50516040805182815290519192507f986bcb2d81145ff3ce3f644ab7850d2a93aba2cbcf35db57d8faa78ec145444f919081900360200190a1505050505056fea265627a7a72315820da9c4f6068471d221c1ede9969d385bed380389bb7cc3011dfaa93c9c6c37a1564736f6c634300050c0032";
