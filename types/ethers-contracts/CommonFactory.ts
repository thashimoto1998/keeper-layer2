/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { Common } from "./Common";

export class CommonFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(): Promise<Common> {
    return super.deploy() as Promise<Common>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): Common {
    return super.attach(address) as Common;
  }
  connect(signer: Signer): CommonFactory {
    return super.connect(signer) as CommonFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Common {
    return new Contract(address, _abi, signerOrProvider) as Common;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getCurrentBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "isContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060c58061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063162790551460375780636fd902e114606e575b600080fd5b605a60048036036020811015604b57600080fd5b50356001600160a01b03166086565b604080519115158252519081900360200190f35b6074608c565b60408051918252519081900360200190f35b3b151590565b439056fea265627a7a72315820c8192130a997317252fd6faf66f3aa8f6b8c57c43bca315e2fb6e3fb748ec0e564736f6c634300050c0032";
