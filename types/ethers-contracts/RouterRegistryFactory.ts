/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { RouterRegistry } from "./RouterRegistry";

export class RouterRegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(): Promise<RouterRegistry> {
    return super.deploy() as Promise<RouterRegistry>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): RouterRegistry {
    return super.attach(address) as RouterRegistry;
  }
  connect(signer: Signer): RouterRegistryFactory {
    return super.connect(signer) as RouterRegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterRegistry {
    return new Contract(address, _abi, signerOrProvider) as RouterRegistry;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IRouterRegistry.RouterOperation",
        name: "op",
        type: "uint8"
      },
      {
        indexed: true,
        internalType: "address",
        name: "routerAddress",
        type: "address"
      }
    ],
    name: "RouterUpdated",
    type: "event"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "routerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "registerRouter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "deregisterRouter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "refreshRouter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061027c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806324f277d2146100515780632ff0282b1461005b5780637880945614610063578063d1cf70d11461009b575b600080fd5b6100596100a3565b005b610059610143565b6100896004803603602081101561007957600080fd5b50356001600160a01b03166101bd565b60408051918252519081900360200190f35b6100596101cf565b3360009081526020819052604090205415610105576040805162461bcd60e51b815260206004820152601d60248201527f526f75746572206164647265737320616c726561647920657869737473000000604482015290519081900360640190fd5b3360008181526020819052604081204390555b6040517fed739f5df64012854c2039ba144af8e3af26211fc7f10a959c6a592ae58c449190600090a3565b336000908152602081905260409020546101a4576040805162461bcd60e51b815260206004820152601d60248201527f526f75746572206164647265737320646f6573206e6f74206578697374000000604482015290519081900360640190fd5b3360008181526020819052604090204390556002610118565b60006020819052908152604090205481565b33600090815260208190526040902054610230576040805162461bcd60e51b815260206004820152601d60248201527f526f75746572206164647265737320646f6573206e6f74206578697374000000604482015290519081900360640190fd5b33600081815260208190526040812055600161011856fea265627a7a72315820288550cbaeee40b6b5daae7926b04b2a780a70fba21b2e573b35acad243fe85b64736f6c634300050c0032";
