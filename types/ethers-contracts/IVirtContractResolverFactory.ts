/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IVirtContractResolver } from "./IVirtContractResolver";

export class IVirtContractResolverFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVirtContractResolver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IVirtContractResolver;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "virtAddr",
        type: "bytes32"
      }
    ],
    name: "Deploy",
    type: "event"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes"
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256"
      }
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_virtAddr",
        type: "bytes32"
      }
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];
